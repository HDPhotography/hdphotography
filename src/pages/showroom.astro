---
import Layout from "../layouts/Layout.astro";

const images = [
  {
    src: "https://images.unsplash.com/photo-1519741497674-611481863552?w=800",
    category: "wedding",
    title: "Beach Wedding Ceremony",
    description: "A beautiful sunset ceremony by the ocean",
    full: "https://images.unsplash.com/photo-1519741497674-611481863552?w=1920",
    width: 1920,
    height: 1280,
  },
  {
    src: "https://images.unsplash.com/photo-1537907690979-ee8e01276184?w=800",
    category: "portrait",
    title: "Golden Hour Portrait",
    description: "Natural light portrait photography",
    full: "https://images.unsplash.com/photo-1537907690979-ee8e01276184?w=1920",
    width: 1920,
    height: 1280,
  },
  {
    src: "https://images.unsplash.com/photo-1511285560929-80b456fea0bc?w=800",
    category: "events",
    title: "Corporate Gala",
    description: "Annual tech conference keynote",
    full: "https://images.unsplash.com/photo-1511285560929-80b456fea0bc?w=1920",
    width: 1920,
    height: 1280,
  },
  {
    src: "https://images.unsplash.com/photo-1606800052052-a08af7148866?w=800",
    category: "wedding",
    title: "Garden Reception",
    description: "Intimate outdoor wedding celebration",
    full: "https://images.unsplash.com/photo-1606800052052-a08af7148866?w=1920",
    width: 1920,
    height: 1280,
  },
  {
    src: "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=800",
    category: "portrait",
    title: "Studio Fashion",
    description: "Professional studio portrait session",
    full: "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=1920",
    width: 1280,
    height: 1920,
  },
];
---

<Layout title="Showroom - Professional Photography">
  <main class="pt-20">
    <section class="py-12">
      <div class="container mx-auto px-6">
        <h1
          class="text-4xl font-display text-center mb-12 dark:text-white"
          data-aos="fade-up"
        >
          Our Portfolio
        </h1>

        <!-- Filters -->
        <div
          class="flex flex-wrap justify-center gap-4 mb-12"
          data-aos="fade-up"
        >
          <button
            class="filter-btn active px-8 py-3 rounded-full bg-primary-500 text-white font-medium transition-all duration-300 hover:shadow-lg hover:scale-105"
            data-filter="all"
          >
            All Work
          </button>
          <button
            class="filter-btn px-8 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-white font-medium transition-all duration-300 hover:shadow-lg hover:scale-105"
            data-filter="wedding"
          >
            Wedding
          </button>
          <button
            class="filter-btn px-8 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-white font-medium transition-all duration-300 hover:shadow-lg hover:scale-105"
            data-filter="portrait"
          >
            Portrait
          </button>
          <button
            class="filter-btn px-8 py-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-white font-medium transition-all duration-300 hover:shadow-lg hover:scale-105"
            data-filter="events"
          >
            Events
          </button>
        </div>

        <!-- Gallery -->
        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
          data-aos="fade-up"
        >
          {
            images.map((image) => (
              <div class="gallery-item" data-category={image.category}>
                <div class="relative group cursor-pointer overflow-hidden rounded-xl">
                  <img
                    src={image.src}
                    alt={image.title}
                    data-full={image.full}
                    data-width={image.width}
                    data-height={image.height}
                    class="w-full aspect-[4/3] object-cover transform transition-all duration-700 group-hover:scale-110"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500">
                    <div class="absolute bottom-0 left-0 right-0 p-6 transform translate-y-6 group-hover:translate-y-0 transition-transform duration-500">
                      <h3 class="text-white text-xl font-display mb-2">
                        {image.title}
                      </h3>
                      <p class="text-gray-200 text-sm">{image.description}</p>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // Select all filter buttons and gallery items
  const filterBtns = document.querySelectorAll<HTMLButtonElement>(".filter-btn");
  const items = document.querySelectorAll<HTMLElement>(".gallery-item");

  // Function to apply the filter
  const applyFilter = (filter: string) => {
    // Update button styles
    filterBtns.forEach((btn) => {
      const btnFilter = btn.getAttribute("data-filter");
      if (btnFilter === filter) {
        btn.classList.add("active", "bg-primary-500", "text-white");
        btn.classList.remove(
          "bg-gray-200",
          "dark:bg-gray-700",
          "text-gray-700",
          "dark:text-white"
        );
      } else {
        btn.classList.remove("active", "bg-primary-500", "text-white");
        btn.classList.add(
          "bg-gray-200",
          "dark:bg-gray-700",
          "text-gray-700",
          "dark:text-white"
        );
      }
    });

    // Show/Hide gallery items based on filter
    items.forEach((item) => {
      const category = item.getAttribute("data-category");
      if (filter === "all" || category === filter) {
        item.style.display = "block"; // Ensure 'item' is treated as an HTMLElement
        item.classList.remove("scale-0", "opacity-0");
        item.classList.add("scale-100", "opacity-100");
      } else {
        item.classList.add("scale-0", "opacity-0");
        setTimeout(() => {
          item.style.display = "none"; // Same here
        }, 300);
      }
    });
  };

  // Parse URL and apply filter based on 'genre' parameter
  const applyFilterFromURL = () => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const filter = urlParams.get("genre") || "all"; // Default to 'all'
    applyFilter(filter);
  };

  // Initialize filters on page load
  window.addEventListener("DOMContentLoaded", () => {
    applyFilterFromURL();

    // Add event listeners to filter buttons
    filterBtns.forEach((btn) => {
      btn.addEventListener("click", () => {
        const filter = btn.getAttribute("data-filter") || "all";
        applyFilter(filter);
      });
    });
  });
</script>

<style>
  .gallery-item {
    transition: all 0.3s ease-in-out;
  }
</style>
